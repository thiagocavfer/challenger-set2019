{"ast":null,"code":"var _jsxFileName = \"/app/src/components/ProductItem.js\";\nimport React from \"react\";\nexport default class ProductItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => this.setState({\n      [event.target.name]: event.target.value\n    });\n\n    this.addToCart = () => {\n      let cart = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : {};\n      let id = this.props.product.id.toString();\n      cart[id] = cart[id] ? cart[id] : 0;\n      let qty = cart[id] + parseInt(this.state.quantity);\n\n      if (this.props.product.available_quantity < qty) {\n        cart[id] = this.props.product.available_quantity;\n      } else {\n        cart[id] = qty;\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    };\n\n    this.state = {\n      quantity: 1\n    };\n  }\n\n  render() {\n    const product = this.props.product;\n    return React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, product.name), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, product.description), React.createElement(\"h5\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"price: \"), \"$\", product.price), React.createElement(\"span\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Available Quantity: \"), product.available_quantity), product.available_quantity > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-warning float-right\",\n      onClick: this.addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Add to cart\"), React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.quantity,\n      name: \"quantity\",\n      onChange: this.handleInputChange,\n      className: \"float-right\",\n      style: {\n        width: \"60px\",\n        marginRight: \"10px\",\n        borderRadius: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })) : React.createElement(\"p\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" product is out of stock \")));\n  }\n\n}","map":{"version":3,"sources":["/app/src/components/ProductItem.js"],"names":["React","ProductItem","Component","constructor","props","handleInputChange","event","setState","target","name","value","addToCart","cart","localStorage","getItem","JSON","parse","id","product","toString","qty","parseInt","state","quantity","available_quantity","setItem","stringify","render","marginBottom","description","price","width","marginRight","borderRadius"],"mappings":"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","sourcesContent":["import React from \"react\";\nexport default class ProductItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { quantity: 1 };\n    }\n    handleInputChange = event =>\n        this.setState({ [event.target.name]: event.target.value });\n    addToCart = () => {\n        let cart = localStorage.getItem(\"cart\")\n            ? JSON.parse(localStorage.getItem(\"cart\"))\n            : {};\n        let id = this.props.product.id.toString();\n        cart[id] = cart[id] ? cart[id] : 0;\n        let qty = cart[id] + parseInt(this.state.quantity);\n        if (this.props.product.available_quantity < qty) {\n            cart[id] = this.props.product.available_quantity;\n        } else {\n            cart[id] = qty;\n        }\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n    };\n    render() {\n        const { product } = this.props;\n        return (\n            <div className=\"card\" style={{ marginBottom: \"10px\" }}>\n                <div className=\"card-body\">\n                    <h4 className=\"card-title\">{product.name}</h4>\n                    <p className=\"card-text\">{product.description}</p>\n                    <h5 className=\"card-text\">\n                        <small>price: </small>${product.price}\n                    </h5>\n                    <span className=\"card-text\">\n                        <small>Available Quantity: </small>\n                        {product.available_quantity}\n                    </span>\n                    {product.available_quantity > 0 ? (\n                        <div>\n                            <button\n                                className=\"btn btn-sm btn-warning float-right\"\n                                onClick={this.addToCart}\n                            >\n                                Add to cart\n                            </button>\n                            <input\n                                type=\"number\"\n                                value={this.state.quantity}\n                                name=\"quantity\"\n                                onChange={this.handleInputChange}\n                                className=\"float-right\"\n                                style={{\n                                    width: \"60px\",\n                                    marginRight: \"10px\",\n                                    borderRadius: \"3px\"\n                                }}\n                            />\n                        </div>\n                    ) : (\n                        <p className=\"text-danger\"> product is out of stock </p>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}